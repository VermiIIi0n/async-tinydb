name: Python CI

on:
  push: {}
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: ["3.10", "3.11.0-rc.2"]
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip twine
        pip install poetry
        poetry config experimental.new-installer false
        poetry install
        poetry install -E all
    - name: Run test suite
      run: |
        poetry run py.test -v --cov=asynctinydb
    - name: Perform type check
      run: |
        poetry run pip install pytest-mypy
        poetry run pytest --mypy -m mypy asynctinydb tests
      if: matrix.python-version != 'pypy3'
    - name: Verify dist package format
      run: |
        poetry build
        twine check dist/*
      if: ${{ contains(matrix.python-version, '3.10') }}
    - name: Upload coverage result
      env:
        COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}
      run: |
         if [ -n "${COVERALLS_REPO_TOKEN}" ]; then
            poetry run coveralls
         fi
      if: ${{ matrix.os != 'windows-latest' }}
